import Head from 'next/head'
import { useEffect, useState } from 'react';
import home from '../styles/Home.module.css';
import Nav from '../Nav.js';
import LoginPopup from '../LoginPopup';
import {initFireBase} from '../firebase/client';
import {getFirestore} from 'firebase/firestore';
import {GoogleAuthProvider,getAuth} from 'firebase/auth'


import {getFirestore as getServerFirestore}from 'firebase-admin/firestore'
import { app as serverApp } from "../firebase/server";



export default function Home({items,featured}) {

  //states
  const [user,setUser]=useState(null);
  const [searchResult,setSearchResult]=useState([]);
  const [search,setSearch]=useState("");

  useEffect(()=>{
    if(search.length>0){
      let result=items.filter((e)=>{
        if(e.name.search(search)>=0){
          return true
        }else{
          return false
        }
      });
      setSearchResult(result);
    }else{
      setSearchResult([]);
    }
  },[search]);
  
  
  //firebase
  const app=initFireBase();
  const db =getFirestore(app);
  const provider=new GoogleAuthProvider();
  const auth = getAuth(app);
  
  //login Popup
  const [lgPopup,setLgPopup]=useState(false);
  const toggleLoginPopup=()=>{
    lgPopup?setLgPopup(false):setLgPopup(true);
  }

  const signout=async ()=>{ 
    await auth.signOut();
  }



  //effects
  useEffect(()=>{

    //auto login
    auth.onAuthStateChanged(user=>{
      if(user){
        setUser({
          username:auth.currentUser.displayName,
          displayname:auth.currentUser.displayName,
          profilepic:auth.currentUser.photoURL,
          email:auth.currentUser.email,
          uid:auth.currentUser.uid,
        });
      }else{
        setUser(null);
      }
    });

    // loadProducts();
  },[]);

  return (
    <div className={home.container}>
      <Head>
        <title>More To Buy</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      {lgPopup?<LoginPopup toggle={toggleLoginPopup}/>:<></>}
      <Nav user={user} login={toggleLoginPopup}/>
      <div className={home.header}>
        <input type="text" className={home.input} onChange={(e)=>{setSearch(e.target.value)}} placeholder='Search'/>
        {user?<>
        <img className={home.profilepic} src={user.profilepic}/>
        <div className={home.dropdown}>
          <h2>â–¿ {user.username}</h2>
          <div>
            <h2 onClick={()=>{window.location='/dashboard'}}>Dashboard</h2>
            <h2 onClick={()=>{window.location='/wishlist'}}>Wishlist</h2>
            <h2 onClick={()=>{window.location='/dashboard'}}>Cart</h2>
            <h2 onClick={()=>{window.location='/dashboard'}}>Orders</h2>
            <h2 onClick={signout}>Logout</h2>
          </div>
        </div>
        </>:
        <div className='button' onClick={toggleLoginPopup}>Login</div>
        }
      </div>

      <div className={home.content}>
      
     

      {search.length?
      <>
      <h4>Result for ' {search} '</h4>
      <div className={home.searchResult}>
        {searchResult.map(p=>{
          return(
            <Item item={p}/>
            )
          })}
        {searchResult.length==0?<h4>No Item Found</h4>:<></>}
      </div>
      <h4>Explore More Products</h4>
      </>
      :<>
      </>}
      <div className={home.products}>
      <div className={home.main}>
        <img src={featured.main.image}/>
        <div>
          <h2>{featured.line1}</h2>
          <h1>{featured.line2.toUpperCase()}</h1>
          <a href={"/"+featured.main.id}>Order Now</a>
        </div>
      </div>

      <div className={home.suggested}>
        <h2>Suggested For You</h2>
        <h1>{featured.suggested.name.toUpperCase()}</h1>
        <img src={featured.suggested.image}/>
        <div className='button' onClick={()=>{window.location='/'+featured.suggested.id}}>Order Now</div>
        
      </div>

        {items.map(p=>{
          return(
            <Item item={p}/>
            )
          })}
      </div>
      
      </div>
    </div>
  );
}
const Item =({item})=>{
  return(
    <div className='item' onClick={()=>{window.location='/'+item.id}}>
      <img src={item.image}/>
      <h2>{item.name}</h2>
      <h3>{item.prize} USD</h3>
    </div>
  )
}

export const getServerSideProps= async ({params})=>{
  const db = getServerFirestore(serverApp);
  let snapshot =await  db.collection('products').get();
  let data=[];
  snapshot.forEach(e=>{
    let D=e.data();
    if(D.status){
      data.push({
          id:e.id,
          name:D.name,
          prize:D.prize,
          image:D.images[0],
      });
    }
  });
  let dataSnapshot =await  db.collection('data').doc('featured').get();
  let featured={}
  if(dataSnapshot.exists){
    let d=dataSnapshot.data();
    featured={
      line1:d.Line1,
      line2:d.Line2,
      dod:[],
    }
    featured.suggested =data[Math.floor(Math.random()*data.length)];
    data.forEach(e=>{
      if(e.id==d.main){
        
        featured.main=e;
      }
      if(d.dod.includes(e.id)){
        featured.push(e);
      }
    });
  }
    return({props:{items:data,featured}});
  }